{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "webApiVersion": "2018-02-01",
    "appInsightsApiVersion": "2015-05-01",
    "sqlServerFqdnTidy": "[toLower(trim(parameters('sqlServerFqdn')))]",
    "poolsSqlDatabaseNameTidy": "[toLower(trim(parameters('poolsSqlDatabaseName')))]",
    "maSqlDatabaseNameTidy": "[toLower(trim(parameters('maSqlDatabaseName')))]",
    "refDataSqlDatabaseNameTidy": "[toLower(trim(parameters('refDataSqlDatabaseName')))]",
    "shardMapManagerSqlDatabaseNameTidy": "[toLower(trim(parameters('shardMapManagerSqlDatabaseName')))]",
    "xcRefDataWebAppNameTidy": "[toLower(trim(parameters('xcRefDataWebAppName')))]",
    "xcCollectWebAppNameTidy": "[toLower(trim(parameters('xcCollectWebAppName')))]",
    "xcSearchWebAppNameTidy": "[toLower(trim(parameters('xcSearchWebAppName')))]",
    "maOpsWebAppNameTidy": "[toLower(trim(parameters('maOpsWebAppName')))]",
    "maRepWebAppNameTidy": "[toLower(trim(parameters('maRepWebAppName')))]",
    "appInsightsNameTidy": "[toLower(trim(parameters('applicationInsightsName')))]",
    "azureServiceBusVersion": "2017-04-01",
    "azureServiceBusNamespaceNameTidy": "[toLower(trim(parameters('azureServiceBusNamespaceName')))]"
  },
  "parameters": {
    "infrastructure": {
      "type": "secureObject",
      "defaultValue": {
        "sqlServerFqdn": null,
        "authCertificateThumbprint": null
      }
    },

    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]"
    },

    "sitecoreAdminPassword": {
      "type": "securestring",
      "minLength": 8
    },
    "licenseXml": {
      "type": "securestring",
      "minLength": 1
    },

    "sqlServerFqdn": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('infrastructure').sqlServerFqdn]"
    },
    "sqlServerLogin": {
      "type": "string",
      "minLength": 1
    },
    "sqlServerPassword": {
      "type": "securestring",
      "minLength": 8
    },

    "poolsSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-pools-db')]"
    },
    "maSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-ma-db')]"
    },
    "refDataSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-refdata-db')]"
    },
    "shardMapManagerSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-smm-db')]"
    },
    "poolsSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "poolsuser"
    },
    "poolsSqlDatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('pools', parameters('passwordSalt'))), uniqueString('pools', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('pools', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "xcRefDataSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "xcrefdatauser"
    },
    "xcRefDataSqlDatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('xcrefdata', parameters('passwordSalt'))), uniqueString('xcrefdata', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('xcrefdata', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "xcMaSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "xcmauser"
    },
    "xcMaSqlDatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('xcma', parameters('passwordSalt'))), uniqueString('xcma', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('xcma', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "xcShardMapManagerSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "xcsmmuser"
    },
    "xcShardMapManagerSqlDatabasePassword": {
      "type": "securestring",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('xcsmm', parameters('passwordSalt'))), uniqueString('xcsmm', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('xcsmm', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "useApplicationInsights": {
      "type": "bool",
      "defaultValue": true
    },
    "applicationInsightsName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-ai')]"
    },

    "xcRefDataWebAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-xc-refdata')]"
    },
    "xcCollectWebAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-xc-collect')]"
    },
    "xcSearchWebAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-xc-search')]"
    },
    "maOpsWebAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-ma-ops')]"
    },
    "maRepWebAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-ma-rep')]"
    },

    "authCertificateThumbprint": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[parameters('infrastructure').authCertificateThumbprint]"
    },

    "maOpsMsDeployPackageUrl": {
      "type": "securestring",
      "minLength": 1
    },
    "maRepMsDeployPackageUrl": {
      "type": "securestring",
      "minLength": 1
    },

    "allowInvalidClientCertificates": {
      "type": "bool",
      "defaultValue": false
    },

    "passwordSalt": {
      "type": "securestring",
      "minLength": 1,
      "defaultValue": "[resourceGroup().id]"
    },

    "xcServerConfigurationEnvironment": {
      "type": "string",
      "defaultValue": "Production",
      "allowedValues": [ "Development", "Production" ]
    },

    "environmentType": {
      "type": "string",
      "defaultValue": "Non-Production"
    },

    "reactAppScApiHost": {
      "type": "string"
    },

    "azureServiceBusNamespaceName" : {
      "type": "string",
      "minLength": 1
    },
    "azureServiceBusAccessKeyName" : {
      "type": "string",
      "minLength": 1
    },
    "xpPerformanceCountersType": {
      "type": "string",
      "allowedValues": [ "Disable", "ApplicationInsights" ],
      "defaultValue": "Disable"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('maOpsWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {},
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "slots",
          "name": "maops-staging",
          "apiVersion": "[variables('webApiVersion')]",
          "properties": {},
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('maOpsWebAppNameTidy'))]"
          ],
          "resources": [
            {
              "name": "MSDeploy",
              "type": "extensions",
              "location": "[parameters('location')]",
              "apiVersion": "[variables('webApiVersion')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('maOpsWebAppNameTidy'), 'maops-staging')]"
              ],
              "properties": {
                "packageUri": "[parameters('maOpsMsDeployPackageUrl')]",
                "dbType": "SQL",
                "connectionString": "[concat('Data Source=tcp:', variables('sqlServerFqdnTidy'), ',1433;Initial Catalog=master;User Id=', parameters('sqlServerLogin'), ';Password=', parameters('sqlServerPassword'), ';')]",
                "setParameters": {
                  "IIS Web Application Name": "[variables('maOpsWebAppNameTidy')]",
                  "Database Server Name": "[variables('sqlServerFqdnTidy')]",
                  "Database Admin User Name": "[parameters('sqlServerLogin')]",
                  "Database Admin User Password": "[parameters('sqlServerPassword')]",
                  "Collection Database Server Name": "[variables('sqlServerFqdnTidy')]",
                  "Processing Pools Database Name": "[variables('poolsSqlDatabaseNameTidy')]",
                  "Processing Pool Database Application User Name": "[parameters('poolsSqlDatabaseUserName')]",
                  "Processing Pool Database Application User Password": "[parameters('poolsSqlDatabasePassword')]",
                  "Collection Shard Map Manager Database Name": "[variables('shardMapManagerSqlDatabaseNameTidy')]",
                  "Collection Database Application User Name": "[parameters('xcShardMapManagerSqlDatabaseUserName')]",
                  "Collection Database Application User Password": "[parameters('xcShardMapManagerSqlDatabasePassword')]",
                  "Marketing Automation Database Name": "[variables('maSqlDatabaseNameTidy')]",
                  "Messaging Connection String": "[listkeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.ServiceBus/namespaces/authorizationRules', variables('azureServiceBusNamespaceNameTidy'), parameters('azureServiceBusAccessKeyName')), variables('azureServiceBusVersion')).primaryConnectionString]",
                  "Reference Data Database Name": "[variables('refDataSqlDatabaseNameTidy')]",
                  "Reference Data Database Application User Name": "[parameters('xcRefDataSqlDatabaseUserName')]",
                  "Reference Data Database Application User Password": "[parameters('xcRefDataSqlDatabasePassword')]",
                  "Marketing Automation Database Application User Name": "[parameters('xcMaSqlDatabaseUserName')]",
                  "Marketing Automation Database Application User Password": "[parameters('xcMaSqlDatabasePassword')]",
                  "XConnect Server Configuration Environment": "[parameters('xcServerConfigurationEnvironment')]",
                  "XConnect Server Certificate Validation Thumbprint": "[parameters('authCertificateThumbprint')]",
                  "Marketing Automation Engine Xconnect Collection Client Endpoint": "[concat('https://', reference(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Web/sites', variables('xcCollectWebAppNameTidy')), variables('webApiVersion')).hostNames[0])]",
                  "Marketing Automation Engine Xconnect Collection Client Certificate Thumbprint": "[parameters('authCertificateThumbprint')]",
                  "Marketing Automation Engine Xconnect Search Client Endpoint": "[concat('https://', reference(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Web/sites', variables('xcSearchWebAppNameTidy')), variables('webApiVersion')).hostNames[0])]",
                  "Marketing Automation Engine Xconnect Search Client Certificate Thumbprint": "[parameters('authCertificateThumbprint')]",
                  "Marketing Automation Engine Xdb Reference Data Endpoint": "[concat('https://', reference(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Web/sites', variables('xcRefDataWebAppNameTidy')), variables('webApiVersion')).hostNames[0])]",
                  "Marketing Automation Engine Xdb Reference Data Client Certificate Thumbprint": "[parameters('authCertificateThumbprint')]",
                  "Allow Invalid Client Certificates": "[parameters('allowInvalidClientCertificates')]",
                  "XConnect Server Application Insights Key": "[if(parameters('useApplicationInsights'), reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy')), variables('appInsightsApiVersion')).InstrumentationKey, '')]",
                  "XP Performance Counters Type": "[if(parameters('useApplicationInsights'), concat('Sitecore:XConnect:Diagnostics:PerformanceCounters:', parameters('xpPerformanceCountersType')), 'Sitecore:XConnect:Diagnostics:PerformanceCounters:Disable')]",
                  "XConnect Server Instance Name": "MarketingAutomation",
                  "License Xml": "[parameters('licenseXml')]"
                }
              }
            },
            {
              "name": "appsettings",
              "type": "config",
              "apiVersion": "[variables('webApiVersion')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('maOpsWebAppNameTidy'), 'maops-staging')]",
                "[concat('Microsoft.Web/sites/', variables('maOpsWebAppNameTidy'), '/slots/maops-staging/extensions/MSDeploy')]"
              ],
              "properties": {
                "WEBSITE_LOAD_CERTIFICATES": "[parameters('authCertificateThumbprint')]",
                "WEBSITE_DYNAMIC_CACHE": 0,
                "SITECORE_ENVIRONMENT_TYPE": "[parameters('environmentType')]",
                "REACT_APP_SC_API_HOST": "[parameters('reactAppScApiHost')]"
              }
            }
          ]
        }
      ]
    },

    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('maRepWebAppNameTidy')]",
      "apiVersion": "[variables('webApiVersion')]",
      "properties": {},
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "slots",
          "name": "marep-staging",
          "apiVersion": "[variables('webApiVersion')]",
          "properties": {},
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('maRepWebAppNameTidy'))]"
          ],
          "resources": [
            {
              "name": "MSDeploy",
              "type": "extensions",
              "location": "[parameters('location')]",
              "apiVersion": "[variables('webApiVersion')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('maRepWebAppNameTidy'), 'marep-staging')]"
              ],
              "properties": {
                "packageUri": "[parameters('maRepMsDeployPackageUrl')]",
                "setParameters": {
                  "IIS Web Application Name": "[variables('maRepWebAppNameTidy')]",
                  "Database Server Name": "[variables('sqlServerFqdnTidy')]",
                  "Marketing Automation Database Name": "[variables('maSqlDatabaseNameTidy')]",
                  "Reference Data Database Name": "[variables('refDataSqlDatabaseNameTidy')]",
                  "Reference Data Database Application User Name": "[parameters('xcRefDataSqlDatabaseUserName')]",
                  "Reference Data Database Application User Password": "[parameters('xcRefDataSqlDatabasePassword')]",
                  "Marketing Automation Database Application User Name": "[parameters('xcMaSqlDatabaseUserName')]",
                  "Marketing Automation Database Application User Password": "[parameters('xcMaSqlDatabasePassword')]",
                  "XConnect Server Configuration Environment": "[parameters('xcServerConfigurationEnvironment')]",
                  "XConnect Server Certificate Validation Thumbprint": "[parameters('authCertificateThumbprint')]",
                  "Allow Invalid Client Certificates": "[parameters('allowInvalidClientCertificates')]",
                  "XConnect Server Application Insights Key": "[if(parameters('useApplicationInsights'), reference(resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy')), variables('appInsightsApiVersion')).InstrumentationKey, '')]",
                  "XP Performance Counters Type": "[if(parameters('useApplicationInsights'), concat('Sitecore:XConnect:Diagnostics:PerformanceCounters:', parameters('xpPerformanceCountersType')), 'Sitecore:XConnect:Diagnostics:PerformanceCounters:Disable')]",
                  "XConnect Server Instance Name": "MarketingAutomationReporting",
                  "License Xml": "[parameters('licenseXml')]"
                }
              }
            },
            {
              "name": "appsettings",
              "type": "config",
              "apiVersion": "[variables('webApiVersion')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('maRepWebAppNameTidy'), 'marep-staging')]",
                "[concat('Microsoft.Web/sites/', variables('maRepWebAppNameTidy'), '/slots/marep-staging/extensions/MSDeploy')]"
              ],
              "properties": {
                "WEBSITE_LOAD_CERTIFICATES": "[parameters('authCertificateThumbprint')]",
                "WEBSITE_DYNAMIC_CACHE": 0,
                "SITECORE_ENVIRONMENT_TYPE": "[parameters('environmentType')]",
                "REACT_APP_SC_API_HOST": "[parameters('reactAppScApiHost')]"
              }
            }
          ]
        }
      ]
    }
  ]
}
